{"ast":null,"code":"import axios from 'axios';\nimport { GET_ALL_DOGS, DOG_DETAIL, GET_BY_NAME, POST_DOG, GET_TEMPERAMENT, CLEAN_DETAIL, ORDER_BY_NAME, ORDER_BY_WEIGHT, TEMPERAMENT_FILTER } from './action-types';\nconst getDogs = () => {\n  return async function (dispatch) {\n    const apiData = await axios.get('/dogs');\n    return dispatch({\n      type: GET_ALL_DOGS,\n      payload: apiData.data\n    });\n  };\n};\nconst getById = id => async dispatch => {\n  try {\n    const byId = await axios.get(`/dogs/${id}`);\n    return dispatch({\n      type: DOG_DETAIL,\n      payload: byId.data\n    });\n  } catch (error) {\n    const noDetail = [];\n    return dispatch({\n      type: DOG_DETAIL,\n      payload: noDetail\n    });\n  }\n};\nconst getByName = name => async dispatch => {\n  try {\n    const byName = await axios.get(`/dogs?name=${name}`);\n    return dispatch({\n      type: GET_BY_NAME,\n      payload: byName.data\n    });\n  } catch (error) {\n    const noName = [];\n    return dispatch({\n      type: GET_BY_NAME,\n      payload: noName\n    });\n  }\n};\nconst postDog = newDog => {\n  return async function (dispatch) {\n    const createDog = await axios.post(\"/dogs/\", newDog);\n    return dispatch({\n      type: POST_DOG,\n      payload: createDog.data\n    });\n  };\n};\nconst getTemperament = () => async dispatch => {\n  try {\n    const allTemperaments = await axios.get('/temperament');\n    const temperamentsSorted = allTemperaments.data.sort((a, b) => a.name.localeCompare(b.name));\n    return dispatch({\n      type: GET_TEMPERAMENT,\n      payload: temperamentsSorted\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nconst orderByName = (dogs, value) => {\n  try {\n    let dogsSorted = [];\n    if (value === \"Ascendent\") {\n      dogsSorted = dogs.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    if (value === \"Descendent\") {\n      dogsSorted = dogs.sort((a, b) => b.name.localeCompare(a.name));\n    }\n    return function (dispatch) {\n      dispatch({\n        type: ORDER_BY_NAME,\n        payload: dogsSorted\n      });\n    };\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst orderByWeight = (dogs, value) => {\n  try {\n    let dogsSorted = [];\n    if (value === \"High-Low\") {\n      dogsSorted = dogs.sort((a, b) => a.minWeight < b.minWeight ? 1 : a.minWeight > b.minWeight ? -1 : 0);\n    }\n    if (value === \"Low-High\") {\n      dogsSorted = dogs.sort((a, b) => a.minWeight > b.minWeight ? 1 : a.minWeight < b.minWeight ? -1 : 0);\n    }\n    return function (dispatch) {\n      dispatch({\n        type: ORDER_BY_WEIGHT,\n        payload: dogsSorted\n      });\n    };\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nconst temperamentFilter = (dogs, value) => {\n  try {\n    const filtered = [];\n    dogs.forEach(dog => {\n      const dogTemperament = [];\n      if (dog.temperament) dogTemperament.push(...dog.temperament.split(', '));\n      if (dogTemperament.includes(value)) filtered.push(dog);\n    });\n    return function (dispatch) {\n      dispatch({\n        type: TEMPERAMENT_FILTER,\n        payload: filtered\n      });\n    };\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport { getDogs, getById, getByName, postDog, getTemperament, cleanDetail, orderByName, orderByWeight, temperamentFilter };","map":{"version":3,"names":["axios","GET_ALL_DOGS","DOG_DETAIL","GET_BY_NAME","POST_DOG","GET_TEMPERAMENT","CLEAN_DETAIL","ORDER_BY_NAME","ORDER_BY_WEIGHT","TEMPERAMENT_FILTER","getDogs","dispatch","apiData","get","type","payload","data","getById","id","byId","error","noDetail","getByName","name","byName","noName","postDog","newDog","createDog","post","getTemperament","allTemperaments","temperamentsSorted","sort","a","b","localeCompare","Error","cleanDetail","orderByName","dogs","value","dogsSorted","orderByWeight","minWeight","temperamentFilter","filtered","forEach","dog","dogTemperament","temperament","push","split","includes"],"sources":["C:/Users/LUDWIN ENRIQUE/Desktop/PI-Dogs/PI-Dogs/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {GET_ALL_DOGS, DOG_DETAIL, GET_BY_NAME, POST_DOG, GET_TEMPERAMENT, CLEAN_DETAIL, ORDER_BY_NAME, ORDER_BY_WEIGHT, TEMPERAMENT_FILTER} from './action-types';\r\n\r\nconst getDogs = () => {\r\n    return async function (dispatch) {\r\n        const apiData = await axios.get('/dogs')\r\n        return dispatch({type: GET_ALL_DOGS, payload: apiData.data})\r\n    }\r\n}\r\n\r\nconst getById = (id) => async (dispatch) => {\r\n    try {\r\n        const byId = await axios.get(`/dogs/${id}`);\r\n        return dispatch({type: DOG_DETAIL, payload: byId.data})\r\n        \r\n    } catch (error) {\r\n        const noDetail = [];\r\n        return dispatch({type: DOG_DETAIL, payload: noDetail})\r\n    }\r\n}\r\n\r\n\r\nconst getByName = (name) => async (dispatch) => {\r\n    try {\r\n        const byName = await axios.get(`/dogs?name=${name}`);\r\n        return dispatch({type: GET_BY_NAME, payload: byName.data})\r\n        \r\n    } catch (error) {\r\n        const noName = [];\r\n        return dispatch({type: GET_BY_NAME, payload: noName})\r\n    }\r\n}\r\n\r\n\r\nconst postDog = (newDog) => {\r\n    return async function (dispatch) {\r\n        const createDog = await axios.post(\"/dogs/\", newDog);\r\n        return dispatch({type: POST_DOG, payload: createDog.data,\r\n        });\r\n      };\r\n}\r\n\r\n\r\nconst getTemperament = () => async (dispatch) => {\r\n    try {\r\n        const allTemperaments = await axios.get('/temperament');\r\n        const temperamentsSorted = allTemperaments.data.sort((a, b) => a.name.localeCompare(b.name));\r\n        return dispatch({ type: GET_TEMPERAMENT, payload: temperamentsSorted });\r\n    } catch (error) {\r\n        throw new Error(error);\r\n    }\r\n}\r\n\r\n\r\nconst cleanDetail = () => {\r\n    return {type: CLEAN_DETAIL}\r\n}\r\n\r\n\r\nconst orderByName = (dogs, value) => {\r\n    try {\r\n        let dogsSorted = []\r\n        if (value === \"Ascendent\") {\r\n            dogsSorted = dogs.sort((a, b) => a.name.localeCompare(b.name))\r\n        }\r\n        if (value === \"Descendent\") {\r\n            dogsSorted = dogs.sort((a, b) => b.name.localeCompare(a.name))\r\n        }\r\n        return function (dispatch) {\r\n            dispatch({ type: ORDER_BY_NAME, payload: dogsSorted })\r\n        }\r\n    } catch (error) {\r\n        throw new Error(error);\r\n    }\r\n}\r\n\r\nconst orderByWeight = (dogs, value) => {\r\n    try {\r\n        let dogsSorted = []\r\n        if (value === \"High-Low\") {\r\n            dogsSorted = dogs.sort(\r\n                (a, b) =>\r\n                    (a.minWeight < b.minWeight) ? 1 : (a.minWeight > b.minWeight) ? -1 : 0);\r\n        }\r\n        if (value === \"Low-High\") {\r\n            dogsSorted = dogs.sort(\r\n                (a, b) =>\r\n                    (a.minWeight > b.minWeight) ? 1 : (a.minWeight < b.minWeight) ? -1 : 0);\r\n        }\r\n        return function (dispatch) {\r\n            dispatch({ type: ORDER_BY_WEIGHT, payload: dogsSorted })\r\n        }\r\n    } catch (error) {\r\n        throw new Error(error);\r\n    }\r\n}\r\n\r\n\r\nconst temperamentFilter = (dogs, value) => {\r\n    try {\r\n        const filtered = [];\r\n        dogs.forEach(dog => {\r\n            const dogTemperament = [];\r\n            if (dog.temperament) dogTemperament.push(...dog.temperament.split(', '));\r\n            if (dogTemperament.includes(value)) filtered.push(dog);\r\n        });\r\n        return function (dispatch) {\r\n            dispatch({ type: TEMPERAMENT_FILTER, payload: filtered })\r\n        }\r\n    } catch (error) {\r\n        throw new Error(error)\r\n    }\r\n}\r\n\r\n\r\nexport {\r\n    getDogs,\r\n    getById,\r\n    getByName,\r\n    postDog,\r\n    getTemperament,\r\n    cleanDetail,\r\n    orderByName,\r\n    orderByWeight,\r\n    temperamentFilter\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}